name: 📊 Auto Update LeetCode Stats

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  workflow_dispatch:

jobs:
  update-stats:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 📊 Count Problems Solved
        id: count
        run: |
          # Count .java files in Daily-contest directory
          PROBLEM_COUNT=$(find Daily-contest -name "*.java" 2>/dev/null | wc -l)
          echo "problems=$PROBLEM_COUNT" >> $GITHUB_OUTPUT
          
          # Count folders (days completed)
          FOLDER_COUNT=$(find Daily-contest -mindepth 1 -maxdepth 1 -type d 2>/dev/null | wc -l)
          echo "days=$FOLDER_COUNT" >> $GITHUB_OUTPUT
          
      - name: 📅 Calculate Challenge Progress
        id: progress
        run: |
          START_DATE="2025-10-01"
          CURRENT_DATE=$(date +%Y-%m-%d)
          
          # Calculate days since start (including start date)
          DAYS_SINCE_START=$(( ($(date -d "$CURRENT_DATE" +%s) - $(date -d "$START_DATE" +%s)) / 86400 + 1 ))
          
          # Ensure we don't go below 1 or above 90
          if [ $DAYS_SINCE_START -lt 1 ]; then
            DAYS_SINCE_START=1
          elif [ $DAYS_SINCE_START -gt 90 ]; then
            DAYS_SINCE_START=90
          fi
          
          echo "currentDay=$DAYS_SINCE_START" >> $GITHUB_OUTPUT
          
          # Calculate success rate
          PROBLEMS_SOLVED=${{ steps.count.outputs.problems }}
          if [ $DAYS_SINCE_START -gt 0 ]; then
            SUCCESS_RATE=$(( (PROBLEMS_SOLVED * 100) / DAYS_SINCE_START ))
          else
            SUCCESS_RATE=0
          fi
          echo "successRate=$SUCCESS_RATE" >> $GITHUB_OUTPUT
          
      - name: ✨ Generate Stats JSON
        run: |
          # Simple calculation using shell arithmetic
          PROBLEMS=${{ steps.count.outputs.problems }}
          CURRENT_DAY=${{ steps.progress.outputs.currentDay }}
          
          # Calculate simple average (will be integer division, e.g., 2/3 = 0)
          if [ $CURRENT_DAY -gt 0 ]; then
            AVERAGE=$((PROBLEMS * 10 / CURRENT_DAY))  # Multiply by 10 for one decimal place
            AVERAGE_FORMATTED="$((AVERAGE / 10)).$((AVERAGE % 10))"
          else
            AVERAGE_FORMATTED="0.0"
          fi
          
          cat > stats.json << EOF
          {
            "totalProblems": ${{ steps.count.outputs.problems }},
            "foldersCreated": ${{ steps.count.outputs.days }},
            "currentDay": ${{ steps.progress.outputs.currentDay }},
            "successRate": ${{ steps.progress.outputs.successRate }},
            "challengeStartDate": "2025-10-01",
            "lastUpdated": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "daysRemaining": $((90 - ${{ steps.progress.outputs.currentDay }})),
            "targetProblems": 90,
            "averageProblemsPerDay": "$AVERAGE_FORMATTED",
            "progressPercentage": $((${{ steps.progress.outputs.currentDay }} * 100 / 90)),
            "completionStatus": "In Progress"
          }
          EOF
          
      - name: 🎯 Create Progress Badge Data
        run: |
          PROBLEMS=${{ steps.count.outputs.problems }}
          DAY=${{ steps.progress.outputs.currentDay }}
          SUCCESS_RATE=${{ steps.progress.outputs.successRate }}
          
          # Create individual badge data files
          echo "$PROBLEMS" > problem-count.txt
          echo "$DAY" > current-day.txt  
          echo "${SUCCESS_RATE}%" > success-rate.txt
          
      - name: 📝 Commit Updated Stats
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          
          git add stats.json problem-count.txt current-day.txt success-rate.txt
          
          if ! git diff --staged --quiet; then
            git commit -m "📊 Auto-update LeetCode progress stats [Day ${{ steps.progress.outputs.currentDay }}] - ${{ steps.count.outputs.problems }} problems solved"
            git push
          else
            echo "No changes to commit"
          fi